// Mixins

// Global UI Transition
@mixin transition($property, $duration: 0.2s, $transition-easing: ease-out) {
  transition-duration: $duration;
  transition-timing-function: $transition-easing;
  transition-property: #{$property};
}

// Ye olde clearfix
@mixin clearfix {
  &:after {
    content: '';
    clear: both;
    display: table;
  }
}

// Smooth text
@mixin smooth {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// Responsive mixins by Andy Richardson (@andimal): https://github.com/andimal/sass-responsive-mixin-madness
@mixin media-xs() {
  @media screen and (max-width: $breakpoint-sm - 1) {
    @content;
  }
}
@mixin media-sm() {
  @media screen and (min-width: $breakpoint-sm) {
    @content;
  }
}
@mixin media-md() {
  @media screen and (min-width: $breakpoint-md) {
    @content;
  }
}
@mixin media-lg() {
  @media screen and (min-width: $breakpoint-lg) {
    @content;
  }
}
@mixin media-nav() {
  @media screen and (min-width: $breakpoint-nav) {
    @content;
  }
}
@mixin media-xl() {
  @media screen and (min-width: $breakpoint-xl) {
    @content;
  }
}

// On-the fly media-queries
@mixin screen($res-min, $res-max) {
  @media screen and (min-width: $res-min) and (max-width: $res-max) {
    @content;
  }
}
@mixin max-screen($res) {
  @media screen and (max-width: $res - 1px) {
    @content;
  }
}
@mixin min-screen($res) {
  @media screen and (min-width: $res) {
    @content;
  }
}

// Hover Style
@mixin button-hover($primaryColor: var(--button-primary), $secondaryColor: var(--button-secondary)) {
  @include box-shadow(0.3);
  color: color('white');
  color: $secondaryColor;
  background-color: $primaryColor;

  svg {
    fill: $secondaryColor;
  }
}

@mixin button($style: default, $primaryColor: var(--button-primary), $secondaryColor: var(--button-secondary)) {
  @include type-cta;
  @include transition('color, background-color, box-shadow');
  @include box-shadow(0);
  cursor: pointer;
  appearance: none;
  background: none;
  padding: 13px 30px;
  align-items: center;
  border-radius: 666px;
  display: inline-flex;
  color: $primaryColor;
  justify-content: center;
  border: 2px solid $primaryColor;

  &:hover,
  &:focus {
    @include button-hover($primaryColor, $secondaryColor);
  }

  // No outline for non-keyboard inputs
  &:focus:not(:focus-visible) {
    outline: none
  }

  svg {
    @include transition(fill);
    margin-left: 17px;
    fill: $primaryColor;
  }

  // Circular Button Style
  @if $style == 'circular' {
    padding: 0;
    width: 50px;
    height: 50px;
    border-radius: 50%;

    svg {
      margin-left: 0;
    }

    @include media-md {
      width: 60px;
      height: 60px;
    }
  }

  // Simple Button Style
  @if $style == 'simple' {
    @include type-cta;
    padding: 0;
    border: none;
    display: flex;
    border-radius: 0;
    text-align: left;
    align-items: center;
    border-bottom: 2px solid;
  }
}